import re # re module is used to work with regular expressions

re.findall()
===========
    --> returns a list of strings containing all matches

    re.findall('\d+','hello 12 hi 89. Howdy 34')
    ['12','89','34']


re.search():
===========
    --> Arguments: pattern and string
                  
    --> looks for the first location where the 
        RegEx pattern produces a match with the string.

    --> If the search is successful, re.search() returns
        a match object; if not, it returns None.

    
    import re

    string = "Python is fun"

    # check if 'Python' is at the beginning
    match = re.search('\APython', string)

    if match:
        print("pattern found inside the string")
    else:
        print("pattern not found") 


re.split()
==========
    --> splits the string where there is a match and returns a list of strings 

    string = 'Twelve:12 Eighty nine:89.'
    pattern = '\d+'
    result = re.split(pattern, string)     

    ['Twelve:', ' Eighty nine:', '.']

    maxsplit    : argument to specify maximum number of splits that can occur
    --------
    result = re.split(pattern, string, 1) 

    ['Twelve:', ' Eighty nine:89 Nine:9.']   

re.sub()
========
    re.sub(pattern, replace, string)

    The method returns a string where matched occurrences are replaced with 
    the content of replace variable.

    # multiline string
    string = 'abc 12\
    de 23 \n f45 6'

    # matches all whitespace characters
    pattern = '\s+'

    # empty string
    replace = ''

    new_string = re.sub(pattern, replace, string)

    output: abc12de23f456

    count : fourth parameter to re.sub()
    -----


Match Object
============
    --> You can get methods and attributes of a 
        match object using dir() function.

    match.group()
    -------------
        --> The group() method returns the part of
            the string where there is a match.

        import re

        string = '39801 356, 2102 1111'

        # Three digit number followed by space followed by two digit number
        pattern = '(\d{3}) (\d{2})'

        # match variable contains a Match object.
        match = re.search(pattern, string) 

        if match:
            print(match.group())
        else:
            print("pattern not found")

        # Output: 801 3





    


