********************************************************************
-- Linear Access, not random Access

Basic Operations:
----------------

    --> Open - get handle fo access
    --> Read - read bytes into [] byte
    --> Write - write []bte into file
    --> Close - release handle
    --> Seek - move read/write head

ioutil File Read
----------------

    dat, e := ioutil.ReadFile("file.txt") : reads file and stores it
                                            into byte array dat
                                        : no need to explicit open/
                                            close

    err := ioutil.WriteFile("file.txt", dat, 0777) : Write dat to 
                                                    file
                                    : 0777: is permission 
                                    -- since it creates new file 

Os package:
----------

    --> os.Open() : opens a file 
                  : Returns a file descriptor
    --> os.Close() : closes a file
    --> os.Read() : reads from a file into []byte
                  : fills the []byte
                  : returns number of bytes read

    --> os.Write() : writes a []byte into a file


    Opening and Reading:
    -------------------

        f,err := os.Open("dt.txt")
        barr := make([]byte, 10)
        nb, err := f.Read(barr)
        f.Close()

    Create and Write:
    ----------------

        f, err := os.Create("file.txt")
        
        barr := []byte{1, 2, 3}
        nb, err := f.Write(barr)        // Writes a []byte - Any Unicode Sequence
        nb, err := f.WriteString("Hi") // Writes a String
********************************************************************